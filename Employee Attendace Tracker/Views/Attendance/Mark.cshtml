@using Business_Layer.DTOs
@model UpdateOrAddAttendanceDto
@{
    ViewData["Title"] = "Mark Attendance";
    var employees = ViewBag.Employees;
}

<h2 class="mb-4">Mark Attendance</h2>
<div class="row">
    <div class="col-md-6">
        <div class="mb-3">
            <label for="employeeDropdown" class="form-label">Employee</label>
            <select id="employeeDropdown" asp-items="employees" class="form-select">
                <option value="">-- Select Employee --</option>
            </select>
        </div>

        <div class="mb-3">
            <label for="attendanceDate" class="form-label">Date</label>
            <input type="date" id="attendanceDate" class="form-control" max="@DateTime.Today.ToString("yyyy-MM-dd")" />
        </div>

        <div class="mb-3">
            <label class="form-label">Current Status</label>
            <div id="statusDisplay" class="form-control-plaintext">Not marked</div>
        </div>

        <div class="btn-group">
            <button id="markPresent" class="btn btn-success">Mark as Present</button>
            <button id="markAbsent" class="btn btn-danger">Mark as Absent</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize max date to today
            const today = new Date().toISOString().split('T')[0];
            $('#attendanceDate').val(today);

            // Get status when employee or date changes
            $('#employeeDropdown, #attendanceDate').change(function() {
                const employeeId = $('#employeeDropdown').val();
                const date = $('#attendanceDate').val();

                if (employeeId && date) {
                    $.get('/Attendance/GetStatus', {
                        employeeId: employeeId,
                        date: date
                    }, function(data) {
                        $('#statusDisplay').text(data.status);
                    });
                }
            });

            // Mark as Present
            $('#markPresent').click(function() {
                saveAttendance('Present');
            });

            // Mark as Absent
            $('#markAbsent').click(function() {
                saveAttendance('Absent');
            });

            function saveAttendance(status) {
                const employeeId = $('#employeeDropdown').val();
                const dateStr = $('#attendanceDate').val();
                const statusValue = status == "Present"? 0: 1; //i have to map the status value to the enum value via casting to numerical values

                if (!employeeId) {
                    alert('Please select an employee');
                    return;
                }

                const data = {
                    employeeId: parseInt(employeeId),
                    date: dateStr,
                    status: statusValue
                };

                $.ajax({
                    url: '/Attendance/SaveAttendance',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function(response) {
                        if (response.success) {
                            alert('Attendance saved successfully!');
                            window.location.replace('/Attendance/Index'); // Redirect to the attendance list
                            $('#statusDisplay').text(status);
                        } else {
                            alert('Error: ' + response.error);
                        }
                    },
                    error: function(xhr) {
                        alert('Error: ' + xhr.responseJSON?.error || 'Failed to save attendance');
                    }
                });
            }
        });
    </script>
}